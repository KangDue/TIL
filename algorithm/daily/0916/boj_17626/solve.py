import sys
sys.stdin = open('input.txt')
sys.setrecursionlimit(10000)
"""
모든 자연수는 넷 혹은 그 이하의 제곱수의 합으로 표현 가능하다.
n을 최소 개수의 제곱수 합으로 표현하는데 몇개가 필요한지 출력하시오.
시간제한 0.5초, n <=50000 인 자연수
"""
# sqs=[0,1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025,2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916, 3025, 3136, 3249, 3364, 3481, 3600, 3721, 3844, 3969, 4096,4225, 4356, 4489, 4624, 4761, 4900, 5041, 5184, 5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400, 6561, 6724, 6889,7056, 7225, 7396, 7569, 7744, 7921, 8100, 8281, 8464, 8649, 8836, 9025, 9216, 9409, 9604, 9801, 10000, 10201, 10404, 10609, 10816, 11025, 11236, 11449, 11664, 11881, 12100, 12321, 12544, 12769, 12996, 13225, 13456, 13689, 13924, 14161,14400, 14641, 14884, 15129, 15376, 15625, 15876, 16129, 16384, 16641, 16900, 17161, 17424, 17689, 17956, 18225, 18496, 18769, 19044, 19321, 19600, 19881, 20164, 20449, 20736, 21025, 21316, 21609, 21904, 22201, 22500, 22801, 23104, 23409, 23716, 24025, 24336, 24649, 24964, 25281, 25600, 25921, 26244, 26569, 26896, 27225, 27556, 27889, 28224, 28561, 28900, 29241, 29584, 29929, 30276, 30625, 30976, 31329, 31684, 32041, 32400, 32761, 33124, 33489, 33856, 34225, 34596,34969, 35344, 35721, 36100, 36481, 36864, 37249, 37636, 38025, 38416, 38809, 39204, 39601, 40000, 40401, 40804, 41209, 41616, 42025, 42436, 42849, 43264, 43681, 44100, 44521, 44944, 45369, 45796, 46225, 46656, 47089, 47524, 47961, 48400, 48841, 49284, 49729]
# 이것 저것 다 시도해 보다가 깨달음.
# 내장함수 쓰면 세부조건 설정이 좀 까다로워지긴 하지만 속도가 훨씩 죽어버린다.
# 문제의 허점... 무조건 만들수 있다면 3개까지만 확인하고 4개일때 경우는 볼 필요도 없다.
import sys
from itertools import combinations_with_replacement as cr
import math
n = int(sys.stdin.readline())
for n in range(1,101):
    sqs = [i * i for i in range(int(math.sqrt(n)),0,-1)]
    try:
        for i in range(1,4):
            for comb in cr(sqs,i):
                if sum(comb) == n:
                    print("n=",n,i)
                    raise Exception
        else: print("n=",n,4)
    except:
        pass
# 제곱수는 1이 된다.
# 3의 배수는



# def comb(arr,r):
#     for i in range(len(arr)):
#         if r == 1:
#             yield [arr[i]]
#         else:
#             for e in comb(arr[i:],r-1):
#                 yield [arr[i]] + e
#
# def comb2(arr,idx,k,res):
#     global mv,n,r
#     if k == 0 and res == n: mv = min(mv,4-k);
#     elif k== 0: return 0
#     for i in range(idx,len(arr)):
#         comb2(arr,i,k-1,res+arr[i])
#     return 0
# mv = 5
# for r in range(1,5):
#     comb2(sqs,0,r,0)
#     if mv < 5: break
# print('mv',mv)



# def check(x,sqs):
#     q = deque([[x, 1, x]])
#     while q:
#         v, length, value = q.popleft()
#         if value == n:
#             return length
#         for nv in sqs:
#             if length < 4:
#                 q.append([nv, length + 1, value + nv])